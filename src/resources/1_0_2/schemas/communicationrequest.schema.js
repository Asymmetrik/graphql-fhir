const CodeScalar = require('../scalars/code.scalar');
const DateTimeScalar = require('../scalars/datetime.scalar');
const { GraphQLObjectType, GraphQLEnumType, GraphQLNonNull, GraphQLString, GraphQLList } = require('graphql');

const { extendSchema } = require('@asymmetrik/fhir-gql-schema-utils');

let CommunicationRequestResourceType = new GraphQLEnumType({
	name: 'CommunicationRequestResourceType',
	values: {
		CommunicationRequest: { value: 'CommunicationRequest' }
	}
});

/**
 * @name exports
 * @summary CommunicationRequest Schema
 */
module.exports = new GraphQLObjectType({
	name: 'CommunicationRequest',
	description: 'Base StructureDefinition for CommunicationRequest Resource.',
	fields: () => extendSchema(require('./domainresource.schema'), {
		resourceType: {
			type: new GraphQLNonNull(CommunicationRequestResourceType),
			description: 'Type of this resource.'
		},
		identifier: {
			type: new GraphQLList(require('./identifier.schema')),
			description: 'A unique ID of this request for reference purposes. It must be provided if user wants it returned as part of any output, otherwise it will be autogenerated, if needed, by CDS system. Does not need to be the actual ID of the source system.'
		},
		category: {
			type: require('./codeableconcept.schema'),
			description: 'The type of message to be sent such as alert, notification, reminder, instruction, etc.'
		},
		sender: {
			type: require('./reference.schema'),
			description: 'The entity (e.g. person, organization, clinical information system, or device) which is to be the source of the communication.'
		},
		recipient: {
			type: new GraphQLList(require('./reference.schema')),
			description: 'The entity (e.g. person, organization, clinical information system, or device) which is the intended target of the communication.'
		},
		payload: {
			type: new GraphQLList(require('./communicationrequestpayload.schema')),
			description: 'Text, attachment(s), or resource(s) to be communicated to the recipient.'
		},
		// ValueSetReference: http://hl7.org/fhir/ValueSet/v3-ParticipationMode
		medium: {
			type: new GraphQLList(require('./codeableconcept.schema')),
			description: 'A channel that was used for this communication (e.g. email, fax).'
		},
		requester: {
			type: require('./reference.schema'),
			description: 'The responsible person who authorizes this order, e.g. physician. This may be different than the author of the order statement, e.g. clerk, who may have entered the statement into the order entry application.'
		},
		// ValueSetReference: http://hl7.org/fhir/ValueSet/communication-request-status
		status: {
			type: CodeScalar,
			description: 'The status of the proposal or order.'
		},
		_status: {
			type: require('./element.schema'),
			description: 'The status of the proposal or order.'
		},
		encounter: {
			type: require('./reference.schema'),
			description: 'The encounter within which the communication request was created.'
		},
		scheduledDateTime: {
			type: DateTimeScalar,
			description: 'The time when this communication is to occur.'
		},
		_scheduledDateTime: {
			type: require('./element.schema'),
			description: 'The time when this communication is to occur.'
		},
		scheduledPeriod: {
			type: require('./period.schema'),
			description: 'The time when this communication is to occur.'
		},
		reason: {
			type: new GraphQLList(require('./codeableconcept.schema')),
			description: 'The reason or justification for the communication request.'
		},
		requestedOn: {
			type: DateTimeScalar,
			description: 'The time when the request was made.'
		},
		_requestedOn: {
			type: require('./element.schema'),
			description: 'The time when the request was made.'
		},
		subject: {
			type: require('./reference.schema'),
			description: 'The patient who is the focus of this communication request.'
		},
		// ValueSetReference: http://hl7.org/fhir/ValueSet/diagnostic-order-priority
		priority: {
			type: require('./codeableconcept.schema'),
			description: 'Characterizes how quickly the proposed act must be initiated. Includes concepts such as stat, urgent, routine.'
		}
	})
});
